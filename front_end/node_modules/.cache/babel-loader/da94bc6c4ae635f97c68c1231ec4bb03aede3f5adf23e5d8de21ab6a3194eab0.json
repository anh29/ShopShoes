{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSCode\\\\NodeJS\\\\Project_PBL3\\\\front_end\\\\src\\\\Components\\\\pay.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport RootProduct from './printRootProduct';\nimport Warning from './warningBox';\nimport Bill from './bill';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootProduct = ReactDOM.createRoot(document.getElementById('listProduct'));\nconst selectProduct = ReactDOM.createRoot(document.getElementById('printed_bill'));\nfunction addBill() {\n  let check = true;\n  let billState = \"Hoan thanh\";\n  let paymentState = \"true\";\n  let cusElement = document.querySelector('.input-box-customer');\n  let clientElement = document.querySelector('.input-box-client');\n  const now = new Date();\n  const time_bill = `${now.getMonth() + 1}/${now.getDate()}/${now.getFullYear()} ${now.getHours()}:${now.getMinutes()}:${now.getSeconds()}`;\n  let total_quantityElement = document.querySelector('.total-quantity');\n  let total_priceElement = document.querySelector('.total-price');\n  let discountElement = document.querySelector('.discount');\n  let extra_payElement = document.querySelector('.extra-pay');\n  let total_payElement = document.querySelector('.total-pay');\n  let note = document.querySelector('#note');\n  let listIdProduct = JSON.parse(localStorage.getItem(\"myData\"));\n  console.log(listIdProduct);\n  if (listIdProduct === null) check = false;else listIdProduct.forEach(product => {\n    if (product.quantity > product.max_quantity) {\n      check = false;\n    }\n  });\n  if (parseInt(total_priceElement.value) !== 0) {\n    if (check === true) {\n      selectProduct.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n        children: /*#__PURE__*/_jsxDEV(Bill, {\n          bill: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this));\n      let bill = document.getElementById('printed_bill');\n      bill.classList.remove('close');\n      //         let object = {\n      //             billState: billState,\n      //             paymentState: paymentState,\n      //             ID_User: parseInt(clientElement.id),\n      //             ID_Customer: parseInt(cusElement.id),\n      //             createDay: time_bill,\n      //             productsMoney: parseFloat(total_priceElement.value),\n      //             Discount: parseFloat(discountElement.value),\n      //             extraMoney: parseFloat(extra_payElement.value),\n      //             Total: parseFloat(total_payElement.value),\n      //             Note: note.value\n      //         }\n      //         fetch('http://localhost:4000/bill', {\n      //             method: 'POST',\n      //             body: JSON.stringify(object),\n      //             headers: {\n      //                 \"Content-Type\": \"application/json\"\n      //             }\n      //         }).then(function(response) {\n      //             response.json().then((res) => {\n      //                 if(res.result !== '') {                    \n      //                     listIdProduct.forEach(element => {\n      //                         let objDetailBill = {\n      //                             ID_bill: res.result,\n      //                             ID_product: element.id,\n      //                             Quantity: element.quantity\n      //                         }\n      //                         fetch('http://localhost:4000/detailBill', {\n      //                             method: 'POST',\n      //                             body: JSON.stringify(objDetailBill),\n      //                             headers: {\n      //                                 \"Content-Type\": \"application/json\"\n      //                             }\n      //                         }).then(function(response_detail) {\n      //                             return response_detail.json();\n      //                         });                        \n      //                         let objUpdateProduct = {\n      //                             SoLuongBan: element.quantity,\n      //                             IDProduct: element.id\n      //                         }\n      //                         fetch('http://localhost:4000/product', {\n      //                             method: 'PUT',\n      //                             body: JSON.stringify(objUpdateProduct),\n      //                             headers: {\n      //                                 \"Content-Type\": \"application/json\"\n      //                             }\n      //                         }).then((response_product) => {\n      //                             return response_product.json();\n      //                         });\n      //                     });        \n      //                     if (cusElement.id !== '') {\n      //                         let upCore = {\n      //                             id: parseInt(cusElement.id),\n      //                             DiemTang: 10\n      //                         }                        \n      //                         fetch('http://localhost:4000/customer', {\n      //                             method: 'PUT',\n      //                             body: JSON.stringify(upCore),\n      //                             headers: {\n      //                                 \"Content-Type\": \"application/json\"\n      //                         }\n      //                         }).then((response_cus) => {\n      //                             return response_cus.json();\n      //                         });\n      //                     }\n      //                     rootProduct.render(\n      //                     <React.StrictMode>\n      //                         <RootProduct/>\n      //                     </React.StrictMode>\n      //                     );\n      //                     total_quantityElement.value = 0;\n      //                     total_priceElement.value = 0;\n      //                     discountElement.value = 0;\n      //                     extra_payElement.value = 0;\n      //                     total_payElement.value = 0;\n      //                     cusElement.value = '';\n      //                     clientElement.value = '';\n      //                     note.value = '';\n      //                     localStorage.setItem(\"myData\", JSON.stringify([]));\n      //                     let warningBox = ReactDOM.createRoot(document.getElementById('warning'));\n      //                     warningBox.render(\n      //                         <React.StrictMode>\n      //                             <Warning content='Cập nhật hoá đơn thành công' name_class='warningBox' color ='#03c000'></Warning>\n      //                         </React.StrictMode>\n      //                     )\n      //                 }else {\n      //                     console.log(\"Tạo hoá đơn khong thành công\");\n      //                 }\n      //             });\n      //         });   \n      //     }  else {\n      //         let warningBox = ReactDOM.createRoot(document.getElementById('warning'));\n      //         warningBox.render(\n      //             <React.StrictMode>\n      //                 <Warning content='Vượt quá số lượng tồn kho !!!' name_class='warningBox' ></Warning>\n      //             </React.StrictMode>\n      //         )\n    }\n  }\n}\n\nconst pay = () => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"pay\",\n    onClick: () => addBill(),\n    children: \"THANH TO\\xC1N\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\nexport default pay;","map":{"version":3,"names":["React","ReactDOM","RootProduct","Warning","Bill","jsxDEV","_jsxDEV","rootProduct","createRoot","document","getElementById","selectProduct","addBill","check","billState","paymentState","cusElement","querySelector","clientElement","now","Date","time_bill","getMonth","getDate","getFullYear","getHours","getMinutes","getSeconds","total_quantityElement","total_priceElement","discountElement","extra_payElement","total_payElement","note","listIdProduct","JSON","parse","localStorage","getItem","console","log","forEach","product","quantity","max_quantity","parseInt","value","render","StrictMode","children","bill","fileName","_jsxFileName","lineNumber","columnNumber","classList","remove","pay","className","onClick"],"sources":["D:/VSCode/NodeJS/Project_PBL3/front_end/src/Components/pay.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport RootProduct from './printRootProduct';\r\nimport Warning from './warningBox';\r\nimport Bill from './bill'\r\nconst rootProduct = ReactDOM.createRoot(document.getElementById('listProduct'));\r\nconst selectProduct = ReactDOM.createRoot(document.getElementById('printed_bill'));\r\nfunction addBill() {    \r\n    let check = true;\r\n    let billState = \"Hoan thanh\";\r\n    let paymentState = \"true\";\r\n    let cusElement = document.querySelector('.input-box-customer');\r\n    let clientElement = document.querySelector('.input-box-client');\r\n    const now = new Date();\r\n    const time_bill = `${now.getMonth() + 1}/${now.getDate()}/${now.getFullYear()} ${now.getHours()}:${now.getMinutes()}:${now.getSeconds()}`;\r\n    let total_quantityElement = document.querySelector('.total-quantity');\r\n    let total_priceElement = document.querySelector('.total-price');\r\n    let discountElement = document.querySelector('.discount');\r\n    let extra_payElement = document.querySelector('.extra-pay');\r\n    let total_payElement = document.querySelector('.total-pay');\r\n    let note = document.querySelector('#note');\r\n    let listIdProduct = JSON.parse(localStorage.getItem(\"myData\"));\r\n    console.log(listIdProduct);\r\n    if(listIdProduct === null) check = false;\r\n    else listIdProduct.forEach((product) => {\r\n        if (product.quantity > product.max_quantity) {\r\n            check = false;\r\n        }\r\n    });\r\n\r\n    if (parseInt(total_priceElement.value) !== 0) { \r\n        if (check === true) {    \r\n            selectProduct.render(\r\n            <React.StrictMode>\r\n                <Bill bill/>\r\n            </React.StrictMode>\r\n            );\r\n            let bill = document.getElementById('printed_bill');\r\n            bill.classList.remove('close');\r\n    //         let object = {\r\n    //             billState: billState,\r\n    //             paymentState: paymentState,\r\n    //             ID_User: parseInt(clientElement.id),\r\n    //             ID_Customer: parseInt(cusElement.id),\r\n    //             createDay: time_bill,\r\n    //             productsMoney: parseFloat(total_priceElement.value),\r\n    //             Discount: parseFloat(discountElement.value),\r\n    //             extraMoney: parseFloat(extra_payElement.value),\r\n    //             Total: parseFloat(total_payElement.value),\r\n    //             Note: note.value\r\n    //         }\r\n    //         fetch('http://localhost:4000/bill', {\r\n    //             method: 'POST',\r\n    //             body: JSON.stringify(object),\r\n    //             headers: {\r\n    //                 \"Content-Type\": \"application/json\"\r\n    //             }\r\n    //         }).then(function(response) {\r\n    //             response.json().then((res) => {\r\n    //                 if(res.result !== '') {                    \r\n    //                     listIdProduct.forEach(element => {\r\n    //                         let objDetailBill = {\r\n    //                             ID_bill: res.result,\r\n    //                             ID_product: element.id,\r\n    //                             Quantity: element.quantity\r\n    //                         }\r\n    //                         fetch('http://localhost:4000/detailBill', {\r\n    //                             method: 'POST',\r\n    //                             body: JSON.stringify(objDetailBill),\r\n    //                             headers: {\r\n    //                                 \"Content-Type\": \"application/json\"\r\n    //                             }\r\n    //                         }).then(function(response_detail) {\r\n    //                             return response_detail.json();\r\n    //                         });                        \r\n    //                         let objUpdateProduct = {\r\n    //                             SoLuongBan: element.quantity,\r\n    //                             IDProduct: element.id\r\n    //                         }\r\n    //                         fetch('http://localhost:4000/product', {\r\n    //                             method: 'PUT',\r\n    //                             body: JSON.stringify(objUpdateProduct),\r\n    //                             headers: {\r\n    //                                 \"Content-Type\": \"application/json\"\r\n    //                             }\r\n    //                         }).then((response_product) => {\r\n    //                             return response_product.json();\r\n    //                         });\r\n    //                     });        \r\n    //                     if (cusElement.id !== '') {\r\n    //                         let upCore = {\r\n    //                             id: parseInt(cusElement.id),\r\n    //                             DiemTang: 10\r\n    //                         }                        \r\n    //                         fetch('http://localhost:4000/customer', {\r\n    //                             method: 'PUT',\r\n    //                             body: JSON.stringify(upCore),\r\n    //                             headers: {\r\n    //                                 \"Content-Type\": \"application/json\"\r\n    //                         }\r\n    //                         }).then((response_cus) => {\r\n    //                             return response_cus.json();\r\n    //                         });\r\n    //                     }\r\n    //                     rootProduct.render(\r\n    //                     <React.StrictMode>\r\n    //                         <RootProduct/>\r\n    //                     </React.StrictMode>\r\n    //                     );\r\n    //                     total_quantityElement.value = 0;\r\n    //                     total_priceElement.value = 0;\r\n    //                     discountElement.value = 0;\r\n    //                     extra_payElement.value = 0;\r\n    //                     total_payElement.value = 0;\r\n    //                     cusElement.value = '';\r\n    //                     clientElement.value = '';\r\n    //                     note.value = '';\r\n    //                     localStorage.setItem(\"myData\", JSON.stringify([]));\r\n    //                     let warningBox = ReactDOM.createRoot(document.getElementById('warning'));\r\n    //                     warningBox.render(\r\n    //                         <React.StrictMode>\r\n    //                             <Warning content='Cập nhật hoá đơn thành công' name_class='warningBox' color ='#03c000'></Warning>\r\n    //                         </React.StrictMode>\r\n    //                     )\r\n    //                 }else {\r\n    //                     console.log(\"Tạo hoá đơn khong thành công\");\r\n    //                 }\r\n    //             });\r\n    //         });   \r\n    //     }  else {\r\n    //         let warningBox = ReactDOM.createRoot(document.getElementById('warning'));\r\n    //         warningBox.render(\r\n    //             <React.StrictMode>\r\n    //                 <Warning content='Vượt quá số lượng tồn kho !!!' name_class='warningBox' ></Warning>\r\n    //             </React.StrictMode>\r\n    //         )\r\n        }\r\n    } \r\n}\r\n\r\nconst pay = () => {  \r\n    return (                  \r\n        <button className=\"pay\" onClick={() => addBill()}>THANH TOÁN</button>\r\n    );\r\n} \r\nexport default pay"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}